// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from walls.djinni

#include "NativeWalls.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeWalls::NativeWalls() = default;

NativeWalls::~NativeWalls() = default;

auto NativeWalls::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeWalls>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.left_x)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.top_y)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.right_x)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.bottom_y)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeWalls::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeWalls>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mLeftX)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mTopY)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mRightX)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mBottomY))};
}

}  // namespace djinni_generated
